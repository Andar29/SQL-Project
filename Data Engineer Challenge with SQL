-- daftar produk yang memiliki harga antara 50.000 and 150.000 --
SELECT 
	no_urut, 
	kode_produk,
	nama_produk,
	harga
FROM ms_produk
WHERE harga BETWEEN 50000 AND 150000;

-- Tampilkan semua produk yang mengandung kata Flashdisk --
SELECT
	no_urut,
	kode_produk,
	nama_produk,
	harga
FROM ms_produk
WHERE nama_produk LIKE '%Flashdisk%';

-- Tampilkan hanya nama-nama pelanggan yang hanya memiliki gelar-gelar berikut: S.H, Ir. dan Drs. --
SELECT
	no_urut,
	kode_pelanggan,
	nama_pelanggan,
	alamat
FROM ms_pelanggan
WHERE 
	nama_pelanggan LIKE '%S.H.%' OR 
	nama_pelanggan LIKE '%Ir.%' OR 
	nama_pelanggan LIKE '%Drs.%';
  
-- Tampilkan nama-nama pelanggan dan urutkan hasilnya berdasarkan kolom nama_pelanggan dari yang terkecil ke yang terbesar (A ke Z) --
SELECT nama_pelanggan
FROM ms_pelanggan
ORDER BY nama_pelanggan ASC;

-- Tampilkan nama-nama pelanggan dan urutkan hasilnya berdasarkan kolom nama_pelanggan dari yang terkecil ke yang terbesar (A ke Z), 
namun gelar tidak boleh menjadi bagian dari urutan. Contoh: Ir. Agus Nugraha harus berada di atas Heidi Goh. --
SELECT nama_pelanggan
FROM ms_pelanggan
ORDER BY
CASE WHEN LEFT(nama_pelanggan,3) = 'Ir.' 
THEN SUBSTRING(nama_pelanggan,5,100) 
ELSE nama_pelanggan END ASC;

-- Tampilkan nama pelanggan yang memiliki nama paling panjang. Jika ada lebih dari 1 orang yang memiliki panjang nama yang sama, tampilkan semuanya. --
SELECT
nama_pelanggan
FROM ms_pelanggan
WHERE LENGTH(nama_pelanggan)
IN 	(
  	SELECT MAX(LENGTH(nama_pelanggan))
  	FROM ms_pelanggan
	);
  
-- Tampilkan nama orang yang memiliki nama paling panjang (pada row atas), dan nama orang paling pendek (pada row setelahnya). 
Gelar menjadi bagian dari nama. Jika ada lebih dari satu nama yang paling panjang atau paling pendek, harus ditampilkan semuanya.
SELECT
nama_pelanggan
FROM ms_pelanggan
WHERE 
	LENGTH(nama_pelanggan)
	IN 	(
  		SELECT MAX(LENGTH(nama_pelanggan))
  		FROM ms_pelanggan
	  	)
  	OR
  	LENGTH(nama_pelanggan)
	IN 	(
  		SELECT MIN(LENGTH(nama_pelanggan))
  		FROM ms_pelanggan
		)
ORDER BY LENGTH(nama_pelanggan) DESC;

--Kuantitas Produk yang Banyak Terjual--
SELECT
	ms_produk.kode_produk,
	nama_produk,
	SUM(qty)		AS total_qty
FROM ms_produk
INNER JOIN tr_penjualan_detail
ON ms_produk.kode_produk = tr_penjualan_detail.kode_produk
GROUP BY kode_produk, nama_produk
ORDER by total_qty DESC
LIMIT 2;

-- Pelanggan Paling Tinggi Nilai Belanjanya --
SELECT 
	tr_penjualan.kode_pelanggan,
	ms_pelanggan.nama_pelanggan,
	SUM(qty * harga_satuan) AS total_harga
FROM tr_penjualan_detail 
INNER JOIN tr_penjualan
	ON tr_penjualan_detail.kode_transaksi = tr_penjualan.kode_transaksi
INNER JOIN ms_pelanggan
	ON  ms_pelanggan.kode_pelanggan = tr_penjualan.kode_pelanggan
GROUP BY tr_penjualan.kode_pelanggan, ms_pelanggan.nama_pelanggan
ORDER BY total_harga DESC
Limit 1;

-- Pelanggan yang Belum Pernah Berbelanja --
SELECT kode_pelanggan, nama_pelanggan, alamat
FROM ms_pelanggan
WHERE kode_pelanggan NOT IN (SELECT kode_pelanggan FROM tr_penjualan)
GROUP BY kode_pelanggan, nama_pelanggan, alamat

-- Transaksi Belanja dengan Daftar Belanja lebih dari 1 --
SELECT
	tr_penjualan.kode_transaksi,
	tr_penjualan.kode_pelanggan,
	ms_pelanggan.nama_pelanggan,
	tr_penjualan.tanggal_transaksi,
	COUNT(tr_penjualan_detail.kode_produk) AS jumlah_detail
FROM tr_penjualan
INNER JOIN ms_pelanggan
	ON tr_penjualan.kode_pelanggan = ms_pelanggan.kode_pelanggan
INNER JOIN tr_penjualan_detail
	ON tr_penjualan.kode_transaksi = tr_penjualan_detail.kode_transaksi
GROUP BY 
	tr_penjualan.kode_transaksi,
	tr_penjualan.kode_pelanggan,
	ms_pelanggan.nama_pelanggan,
	tr_penjualan.tanggal_transaksi
HAVING jumlah_detail > 1


