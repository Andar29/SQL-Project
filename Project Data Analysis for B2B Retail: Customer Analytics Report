--  Memahami Tabel --
SELECT * FROM orders_1 limit 5;
SELECT * FROM orders_2 limit 5;
SELECT * FROM customer limit 5;

-- Total Penjualan dan Revenue pada Quarter-1 (Jan, Feb, Mar) dan Quarter-2 (Apr,Mei,Jun)
SELECT 	SUM(quantity) 			      	AS total_penjualan,
		    SUM(quantity * priceeach) 	AS revenue
FROM orders_1
WHERE status = 'shipped';

SELECT 	SUM(quantity) 				AS total_penjualan,
		SUM(quantity * priceeach) 	AS revenue
FROM orders_2
WHERE status = 'shipped';

-- Menghitung persentasi keseluruhan penjualan --
SELECT 	
	quarter,
	SUM(quantity) 				AS total_penjualan,
	SUM(quantity * PriceEach)	AS revenue
FROM 
	(SELECT	
		orderNumber,
		status,
		quantity,
		priceEach,
		1 			AS quarter
	FROM orders_1
	UNION
	SELECT	
		orderNumber,
		status,
		quantity,
		priceEach,
		2 			AS quarter
	FROM orders_2)
					AS tabel_a
WHERE status = 'shipped'
GROUP BY quarter;

-- Perhitungan Growth Penjualan dan Revenue --
%Growth Penjualan = (6717 – 8694)/8694 = -22%
%Growth Revenue = (607548320 – 799579310)/ 799579310 = -24%

-- Apakah jumlah customers xyz.com semakin bertambah?
SELECT
	quarter,
	COUNT(DISTINCT customerID) AS total_customers
FROM
	(SELECT
		customerID,
		createDate,
		QUARTER(createDate)		AS quarter
	FROM customer
	WHERE createDate BETWEEN '2004-01-01'
		AND '2004-06-30') 
	AS tabel_b
GROUP BY quarter;

-- Category produk apa saja yang paling banyak di-order oleh customers di Quarter-2?
SELECT 
	quarter,
	COUNT(DISTINCT customerID) AS total_customers
FROM
	(SELECT
		customerID,
		createDate,
		QUARTER(createDate)		AS quarter
	FROM customer
	WHERE createDate BETWEEN '2004-01-01'
		AND '2004-06-30')
	AS tabel_b
WHERE customerID IN
		(SELECT DISTINCT customerId
		FROM orders_1
		UNION
		SELECT DISTINCT customerId
		FROM orders_2)
GROUP BY quarter;

-- Category produk apa saja yang paling banyak di-order oleh customers di Quarter-2?
SELECT *
FROM
    (
    SELECT 
	    categoryID,
	    COUNT(DISTINCT orderNumber)	AS total_order,
	    SUM(quantity)		AS total_penjualan
    FROM
	      (SELECT 
		        productCode,
		        orderNumber,
		        quantity,
	        	status,
            LEFT(productCode,3)	AS categoryID
	      FROM orders_2
	      WHERE status = 'shipped')
	      AS tabel_c
    GROUP BY categoryID
    ) a
ORDER BY total_order DESC;
